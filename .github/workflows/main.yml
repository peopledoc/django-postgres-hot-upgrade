name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
  release:
    types:
      - published

jobs:
  check-lint:
    strategy:
      matrix:
        include:
          - name: code
            tox-env: check-lint
          - name: documentation
            tox-env: docs

    name: Check ${{ matrix.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          set -xeu
          python -VV
          pip install tox
      - name: Check ${{ matrix.name }}
        run: tox -e ${{ matrix.tox-env }}

  tests:
    strategy:
      matrix:
        include:
          - python-version: 3.6
            tox-env: py36-django{22}
          - python-version: 3.7
            tox-env: py37-django{22}
          - python-version: 3.8
            tox-env: py38-django{22}

    name: Test (python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    services:

      postgres10:
        image: postgres:10
        env:
          POSTGRES_DB: db
          POSTGRES_PASSWORD: password

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
        ports:
          - 5432:5432

      postgres12:
        image: postgres:12
        env:
          POSTGRES_DB: db
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
        ports:
          - 5433:5432

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          set -xeu
          python -VV
          pip install tox
      - name: Run tox targets for ${{ matrix.python-version }}
        run: tox -e ${{ matrix.tox-env }}
        env:
          PGDATABASE: db
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: password

  deploy:
    name: Publish package to PyPI
    runs-on: ubuntu-latest
    needs:
      - check-lint
      - tests
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) || github.event_name == 'release'
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          set -xeu
          python -VV
          pip install -U pip build
      - name: Build the wheel
        run: python -m build --sdist --wheel
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
